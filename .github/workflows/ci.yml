name: ci

on:
  workflow_dispatch:
  pull_request:
    branches: [ "master" ]

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_NOLOGO: 1
  # Set to true if you use packages.lock.json across solutions
  USE_LOCKED_MODE: 'false'

jobs:
  build-test:
    name: Build & Test (.NET 9)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: true
          cache-dependency-path: |
            **/*.sln
            **/*.csproj
            **/global.json
            **/nuget.config

      - name: Restore
        run: |
          if [ "${USE_LOCKED_MODE}" = "true" ]; then
            dotnet restore --locked-mode
          else
            dotnet restore
          fi

      - name: Build (Release, warnings as errors)
        run: dotnet build --configuration Release --no-restore /p:TreatWarningsAsErrors=true

      - name: Test (XPlat Coverage)
        run: >
          dotnet test --configuration Release --no-build
          --collect:"XPlat Code Coverage"
          --logger "trx;LogFileName=test-results.trx"

      - name: Locate coverage file
        id: coverage
        run: |
          # Find the cobertura coverage file produced by XPlat collector
          FILE=$(find . -type f -name "coverage.cobertura.xml" | head -n1 || true)
          echo "file=${FILE}" >> "$GITHUB_OUTPUT"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          if-no-files-found: warn
          path: |
            **/TestResults/*.trx
            **/TestResults/*/coverage.cobertura.xml
            ${{ steps.coverage.outputs.file }}

  codeql:
    name: CodeQL (C#)
    runs-on: ubuntu-latest
    # CodeQL needs these minimal permissions
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: csharp
          # Optional: enable additional queries (security-extended or security-and-quality)
          # queries: security-extended

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          cache: true
          cache-dependency-path: |
            **/*.sln
            **/*.csproj
            **/global.json
            **/nuget.config

      # Let CodeQL detect and build the solution (good default for C#)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Analyze
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:csharp"

  sbom:
    name: SBOM (SPDX JSON)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          path: "./src"
          format: spdx-json
          output-file: ./sbom.spdx.json
          upload-artifact: false

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: ./sbom.spdx.json
          if-no-files-found: error
