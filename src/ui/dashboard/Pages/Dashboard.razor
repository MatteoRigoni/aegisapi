@page "/"
@inject IMetricsService MetricsService
@inject ISnackbar Snackbar

<MudCard Class="pa-4 ma-4" Elevation="4">
    <MudText Typo="Typo.h5" Class="mb-2" Bold="true">Live Metrics</MudText>
    <MudDivider Class="mb-2" />
    <MudText Typo="Typo.h6">CPU Usage: @cpu.ToString("F1")%</MudText>
    <MudText Typo="Typo.h6">Memory Usage: @memory.ToString("F0") MB</MudText>
    <MudText Typo="Typo.h6">Active Users: @activeUsers</MudText>
    <MudText Typo="Typo.h6">Error Rate: @errorRate.ToString("F2")%</MudText>
</MudCard>

@code {
    private double cpu;
    private double memory;
    private int activeUsers;
    private double errorRate;
    private CancellationTokenSource? cts;

    protected override async Task OnInitializedAsync()
    {
        cts = new();
        try
        {
            await MetricsService.StartMetricsAsync(OnMetric, cts.Token);
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Warning);
        }
    }

    private Task OnMetric(MetricDto m)
    {
        cpu = m.Cpu;
        memory = m.Memory;
        activeUsers = m.ActiveUsers;
        errorRate = m.ErrorRate;
        InvokeAsync(StateHasChanged);
        return Task.CompletedTask;
    }

    public void Dispose()
    {
        cts?.Cancel();
    }
}
