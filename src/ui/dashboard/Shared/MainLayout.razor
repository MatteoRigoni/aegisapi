@inherits LayoutComponentBase
@using MudBlazor
@using Microsoft.Extensions.Configuration

<MudThemeProvider IsDarkMode="true" />
<MudDialogProvider />
<MudSnackbarProvider />

<div tabindex="0" @onkeydown="HandleKey" @onkeydown:preventDefault="true" @onkeydown:stopPropagation="true">
    <MudLayout>
        <MudAppBar Color="Color.Primary">
            Aegis Dashboard
            <MudSpacer />
            <MudChip Color="Color.Error" Variant="Variant.Filled">ALPHA</MudChip>
        </MudAppBar>
        <MudDrawer Open="true" ClipMode="DrawerClipMode.Always" Variant="DrawerVariant.Mini">
            <NavMenu />
        </MudDrawer>
        <MudMainContent Class="wow-bg">
            @Body
        </MudMainContent>
    </MudLayout>
    @if (UseMocks)
    {
        <div class="mock-banner">MOCK MODE</div>
    }
</div>

@code {
    [Inject] NavigationManager Nav { get; set; } = default!;
    [Inject] IConfiguration Configuration { get; set; } = default!;
    [Inject] IDialogService Dialog { get; set; } = default!;

    private bool UseMocks => Configuration.GetValue<bool>("UseMocks");

    private void HandleKey(KeyboardEventArgs e)
    {
        if ((e.CtrlKey || e.MetaKey) && e.Key.Equals("k", StringComparison.OrdinalIgnoreCase))
        {
            OpenCommandPalette();
            return;
        }

        switch (e.Key.ToLowerInvariant())
        {
            case "d":
                Nav.NavigateTo("/");
                break;
            case "i":
                Nav.NavigateTo("/incidents");
                break;
            case "p":
                Nav.NavigateTo("/policies");
                break;
        }
    }

    private void OpenCommandPalette()
    {
        var options = new DialogOptions
        {
            CloseOnEscapeKey = true,
            DisableBackdropClick = true
        };

        Dialog.Show<SearchDialog>("Command Palette", options);
    }
}
